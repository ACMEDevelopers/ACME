% function [tout,X,MX,Y] = EMRE_geneExp_EMRE_matlab(t,theta,kappa) 
function varargout = EMRE_geneExp_EMRE_matlab(varargin) 

t = varargin{1};
theta = varargin{2};
if(nargin>=3)
    kappa=varargin{3};
   if(length(kappa)==1)
    kappa(2:29)=0;
   end
else
    kappa = zeros(1,29);
end
% Initial conditions
x0 = x0fun(theta,kappa);

% Simulation
[tout,X] = ode15s(@(t,x) rhs(t,x,theta,kappa),t,x0);
Y = rhsO(t,X,theta,kappa);

% Assign output
varargout{1} = tout;
if nargout >= 2
varargout{2} = X;
end
if nargout >= 3
    % Moments of species
    varargout{3} = Y(:,1:14);
end
if nargout >= 4
    % Moments of output variables
    varargout{4} = Y(:,15:end);
end
if nargout >= 5
    error('Too many output arguments.');
end


%% RIGHT-HAND SIDE
function [dxdt] = rhs(t,x,theta,kappa) 

dxdt = [theta(2)*x(2) - theta(1)*x(1) - kappa(1)*theta(7)*x(1)*x(4);...
         theta(1)*x(1) - theta(2)*x(2) + kappa(1)*theta(7)*x(1)*x(4);...
         theta(3)*x(2) - theta(4)*x(3);...
         theta(5)*x(3) - theta(6)*x(4);...
         (theta(1)*x(1) + theta(2)*x(2) - 2*kappa(1)*theta(1)*x(5) + 2*kappa(1)*theta(2)*x(6) + kappa(1)*theta(7)*x(1)*x(4) - 2*kappa(1)^2*theta(7)*x(4)*x(5) - 2*kappa(1)^2*theta(7)*x(1)*x(11))/kappa(1);...
         -(kappa(1)^2*theta(2)*x(6) - kappa(1)^2*theta(2)*x(7) - kappa(1)^2*x(5)*(theta(1) + kappa(1)*theta(7)*x(4)) + kappa(1)^2*x(6)*(theta(1) + kappa(1)*theta(7)*x(4)) + kappa(1)*theta(1)*x(1) + kappa(1)*theta(2)*x(2) + kappa(1)^2*theta(7)*x(1)*x(4) - kappa(1)^3*theta(7)*x(1)*x(11) + kappa(1)^3*theta(7)*x(1)*x(12))/kappa(1)^2;...
         (theta(1)*x(1) + theta(2)*x(2) + 2*kappa(1)*theta(1)*x(6) - 2*kappa(1)*theta(2)*x(7) + kappa(1)*theta(7)*x(1)*x(4) + 2*kappa(1)^2*theta(7)*x(4)*x(6) + 2*kappa(1)^2*theta(7)*x(1)*x(12))/kappa(1);...
         theta(3)*x(6) - theta(1)*x(8) + theta(2)*x(9) - theta(4)*x(8) - kappa(1)*theta(7)*x(4)*x(8) - kappa(1)*theta(7)*x(1)*x(13);...
         theta(1)*x(8) + theta(3)*x(7) - theta(2)*x(9) - theta(4)*x(9) + kappa(1)*theta(7)*x(4)*x(8) + kappa(1)*theta(7)*x(1)*x(13);...
         (theta(3)*x(2) + theta(4)*x(3) + 2*kappa(1)*theta(3)*x(9) - 2*kappa(1)*theta(4)*x(10))/kappa(1);...
         theta(5)*x(8) - theta(1)*x(11) + theta(2)*x(12) - theta(6)*x(11) - kappa(1)*theta(7)*x(1)*x(14) - kappa(1)*theta(7)*x(4)*x(11);...
         theta(1)*x(11) - theta(2)*x(12) + theta(5)*x(9) - theta(6)*x(12) + kappa(1)*theta(7)*x(1)*x(14) + kappa(1)*theta(7)*x(4)*x(11);...
         theta(3)*x(12) + theta(5)*x(10) - theta(4)*x(13) - theta(6)*x(13);...
         (theta(5)*x(3) + theta(6)*x(4) + 2*kappa(1)*theta(5)*x(13) - 2*kappa(1)*theta(6)*x(14))/kappa(1);...
         theta(2)*x(16) - theta(1)*x(15) - kappa(1)*theta(7)*x(11) - kappa(1)*theta(7)*x(1)*x(18) - kappa(1)*theta(7)*x(4)*x(15);...
         theta(1)*x(15) - theta(2)*x(16) + kappa(1)*theta(7)*x(11) + kappa(1)*theta(7)*x(1)*x(18) + kappa(1)*theta(7)*x(4)*x(15);...
         theta(3)*x(16) - theta(4)*x(17);...
         theta(5)*x(17) - theta(6)*x(18)];

%% OUTPUT MAP
function y = rhsO(t,x,theta,kappa) 

y = [x(:,1) + x(:,15),...
         x(:,2) + x(:,16),...
         x(:,3) + x(:,17),...
         x(:,4) + x(:,18),...
         x(:,5),...
         x(:,6),...
         x(:,7),...
         x(:,8),...
         x(:,9),...
         x(:,10),...
         x(:,11),...
         x(:,12),...
         x(:,13),...
         x(:,14),...
         theta(9) + theta(8).*(x(:,4) + x(:,18)),...
         theta(8).^2.*x(:,14)];


%% INITIAL CONDITIONS FOR STATE
function x0 = x0fun(theta,kappa) 

x0 = [(kappa(2)*kappa(16) - kappa(2) + 1)/kappa(1);...
       (kappa(3)*kappa(17))/kappa(1);...
       (kappa(4)*kappa(18) - theta(10)*(kappa(4) - 1))/kappa(1);...
       (kappa(5)*kappa(19))/kappa(1);...
       0;...
       0;...
       0;...
       0;...
       0;...
       0;...
       0;...
       0;...
       0;...
       0;...
       0;...
       0;...
       0;...
       0];


